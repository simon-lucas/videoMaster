package VideoMaster {		import flash.display.MovieClip;	import data.Global;	import com.greensock.loading.ImageLoader;	import com.greensock.loading.LoaderMax;	import com.greensock.events.LoaderEvent;	import flash.display.Sprite;	import flash.utils.Timer;	import flash.events.TimerEvent;	import flash.events.MouseEvent;			public class TimeLine extends MovieClip {				private var bgImagename = "Map_vector_LAND.jpg"		private var overlay:String = "Map_vector_water 3840_"		private var imageCount:uint = 375;		private var overLaySprite:Sprite;		private var mapSprite:GulfMapAnimation;		private var animTimer:Timer		private var frameCounter = 0		private var timeLineControl: TimeLineControl		private var inc = 1;		private var yearWidth:Number //pxile width of year		private var dragging:Boolean=false;		private var offsetX:Number		public function TimeLine() {			// constructor code					}				public function init():void{			mapSprite = new GulfMapAnimation()			mapSprite.x=stage.stageWidth/2			mapSprite.y=stage.stageHeight/2			addChild(mapSprite)						timeLineControl = new TimeLineControl()			timeLineControl.x= 100			timeLineControl.y= 800					addChild(timeLineControl)			initTL()			timeLineControl.indicate.addEventListener(MouseEvent.MOUSE_DOWN,onDrag)				timeLineControl.indicate.addEventListener(MouseEvent.MOUSE_UP,endDrag)					stage.addEventListener(MouseEvent.MOUSE_UP,endDrag)				animTimer = new Timer(40,0)			animTimer.addEventListener(TimerEvent.TIMER,playAnim)			animTimer.start()						}				public function onDrag(e:MouseEvent):void{			dragging=true			offsetX = mouseX - (timeLineControl.indicate.x + timeLineControl.x)		}		public function endDrag(e:MouseEvent):void{			dragging=false		}						public function initTL():void{			var dates = [1800,1200,1000,800,0]			var tlwidth = 1800/4			yearWidth=tlwidth/1800			timeLineControl.bg.width = tlwidth			for (var i:int = 1; i < 6; i++)							{				timeLineControl["date"+i].x = (1800-dates[i-1]) * yearWidth				trace(timeLineControl["date"+i].x)				timeLineControl["m"+i].x= timeLineControl["date"+i].x			}		}				public function loadImages():void{			var imageLoader = new ImageLoader("timeline_images/Map_vector_LAND.jpg", {name:"Map_vector_LAND.jpg" , vAlign:"center", container:mapSprite, estimatedBytes:2400,  alpha:1, scaleMode:"proportionalInside", centerRegistration:true, onComplete:completeHandler1})						imageLoader.load()			Global.timeLineQueue = new LoaderMax({name:"timeLineQueue", onProgress:progressHandler, onComplete:completeHandler2});			for (var i:int = 0; i < imageCount; i++)			{				//var h= new HorsePicture();				//trace(i, Global.horseCollection[i].image)				//h.init(i, Global.horseCollection[i].image+".jpg")				//h.init(i, Global.horseCollection[i])				//h.image=Global.horseCollection[i].image				var num = String(i)				while(num.length < 5){					num="0"+num;				}				//container:h.thumbHolder,				var overlayName = overlay + num;				var imageLoader = new ImageLoader("timeline_images/"+overlayName+".png", {name:overlayName , vAlign:"center", estimatedBytes:2400,  alpha:1, scaleMode:"proportionalInside", centerRegistration:true})				//h.thumbLoader = imageLoader				Global.timeLineQueue.append(imageLoader);				//horsePics.push(h)						}					}				public function completeHandler1(e:LoaderEvent):void{			trace("completeHandler1")			overLaySprite.addChild(Global.timeLineQueue.getChildAt(100).content)			Global.timeLineQueue.load()		}		public function completeHandler2(e:LoaderEvent):void{			trace("completeHandler2")			overLaySprite.addChild(Global.timeLineQueue.getChildAt(100).content)			trace("X", Global.timeLineQueue.getChildAt(100).content)			animTimer.start()		}		public function progressHandler(e:LoaderEvent):void{			//trace("yikes")		}		public function playAnim(e:TimerEvent):void{			if (!dragging){				frameCounter+=inc;				if (frameCounter<mapSprite.totalFrames && frameCounter>0){					mapSprite.gotoAndStop(frameCounter)				}else{					inc= inc * -1				}				timeLineControl.indicate.x = yearWidth * ((1800/225) * mapSprite.currentFrame )			}else{				if (mouseX > timeLineControl.x && mouseX < timeLineControl.x + timeLineControl.bg.width){					timeLineControl.indicate.x = (mouseX - timeLineControl.x) - offsetX				 	var tyear = timeLineControl.indicate.x / yearWidth 					trace(timeLineControl.indicate.x , yearWidth, tyear)					var yFrame = tyear / ( 1800/mapSprite.totalFrames) 					trace("year:", tyear, "frame: ", yFrame) 					mapSprite.gotoAndStop(Math.floor(yFrame) )					frameCounter = mapSprite.currentFrame				}			}					}	}	}