package com.simon.utils{		import flash.text.TextField;	import flash.display.MovieClip;	import flash.display.Sprite;	import flash.display.Shape;	import 	flash.geom.Point;	import flash.events.Event;	import flash.system.System;	import flash.utils.Timer;    import flash.events.TimerEvent;	import flash.text.TextFormat;		public class MemoryGraph extends MovieClip {				private var _startmem:uint;		private var _counter:uint;		private var _counter2:uint=0;		private var _maxHeight:Number=200;		public var _maxNum:Number=500000;		public var _viewable_stage_w:Number=2000;		private var _myFormat:TextFormat;		private var _lastMem:Number=0;		private var _min:Number;		private var _max:Number;		private var _minStart:Number;		private var _maxStart:Number;		private var _startMinLine:Shape;       	private var _startMaxLine:Shape;		private var _currentMinLine:Shape;		private var _currentMaxLine:Shape;		private var _currentLine:Shape;		private var _slowHighLine:Shape;				public var _graph:Sprite;		public var _graph2:Sprite;		private var _lastMax:uint=0;		public function MemoryGraph() {			super();			_counter=0;						var child:Shape = new Shape();            child.graphics.beginFill(0xffffff);            child.graphics.drawRect(0, 0, 2000, 200);            child.graphics.endFill();            addChild(child);			_graph=new Sprite();			addChild(_graph);						_graph2=new Sprite();			addChild(_graph2);						_myFormat = new TextFormat();  			//Giving the format a hex decimal color code  			_myFormat.color = 0x000000;   			//Adding some bigger text size  			_myFormat.size = 10;			_minStart=System.totalMemory/1024			_maxStart=System.totalMemory/1024			_min=_minStart;			_max=_minStart;			_startMinLine = new Shape();            _currentLine = new Shape();			_currentMinLine = new Shape();			_currentMaxLine = new Shape();            _graph.addChild(_startMinLine);			_graph.addChild(_currentLine);			_graph.addChild(_currentMinLine);			_graph.addChild(_currentMaxLine);			var p:Point=new Point();			p.x=0;			p.y=(_minStart/_maxNum)*_maxHeight;			var p2:Point=new Point();			p2.x=100;			p2.y=(_minStart/_maxNum)*_maxHeight;			drawLine(_startMinLine,p,p2,0x220000);			//drawLine(_currentMaxLine,{x:0,y:(_max/_maxNum)*_maxHeight},{x:50,y:(_max/_maxNum)*_maxHeight},0x00ff00})						_slowHighLine=new Shape();			_graph2.addChild(_slowHighLine)		}		public function drawLine(aline:Shape,start:Point,end:Point,color:Number):void{			aline.graphics.clear();			aline.graphics.lineStyle(1, color);		//	aline.graphics.beginFill(color);			aline.graphics.moveTo(start.x,start.y);            aline.graphics.lineTo(end.x,end.y);           // aline.graphics.endFill();		}			public function addLine(aline:Shape,end:Point,color:Number):void{							aline.graphics.lineStyle(1, color);			//	aline.graphics.beginFill(color);				            aline.graphics.lineTo(end.x,end.y);	           // aline.graphics.endFill();			}		public function displayMemory(media:String):void {						var _currentMem:Number=System.totalMemory/1024			_min=Math.min(_min,_currentMem)			_max=Math.max(_max,_currentMem)					var p:Point=new Point();			p.x=0;			p.y=(_min/_maxNum)*_maxHeight;			var p2:Point=new Point();			p2.x=_counter*5;			p2.y=(_min/_maxNum)*_maxHeight;			drawLine(_currentMinLine,p,p2,0xff0000);						p.x=0;			p.y=(_max/_maxNum)*_maxHeight;			p2=new Point();			p2.x=_counter*5;			p2.y=(_max/_maxNum)*_maxHeight;			drawLine(_currentMaxLine,p,p2,0x0000ff);						if (_currentMem!=_lastMem){				p2=new Point();				p2.x=_counter*5;				p2.y=(_currentMem/_maxNum)*_maxHeight;				addLine(_currentLine,p2,0x00ff00);				_counter++;							}			if (_currentMem>_lastMax){				p2=new Point();				p2.x=_counter2*5;				p2.y=(_currentMem/_maxNum)*_maxHeight;				addLine(_slowHighLine,p2,0xff0000);				_lastMax=_currentMem;				_counter2++			}			_lastMem=_currentMem;			if (_graph.width>_viewable_stage_w){								_graph.x=_viewable_stage_w-_graph.width			}						/*			_counter++;			var color:Number;			switch (media){				case "slideshow":				color=0x00CE00				break;				case "video":				color=0x00FFFF				break;				case "swf":				color=0xFF00FF				break;					}						var child:Shape = new Shape();            child.graphics.beginFill(color);            child.graphics.drawCircle(_counter*2, 4, 1);            child.graphics.endFill();            _graph.addChild(child);			var bar_height:Number=((System.totalMemory/1024)/_maxNum)*_maxHeight			child = new Shape();            child.graphics.beginFill(0xFF0000);            child.graphics.drawRect(_counter*2-1, 8, 1, bar_height);            child.graphics.endFill();            _graph.addChild(child);			_graph.width=Math.min(_graph.width,_viewable_stage_w)			*/		}	}}