package com.simon.utils{	import flash.events.*;	import flash.net.URLRequest;	import flash.display.Loader;	import flash.display.LoaderInfo;	import flash.display.Sprite;	import flash.display.Shape;	import flash.display.LineScaleMode	import flash.text.*;	import flash.events.*;	import flash.display.Bitmap;	public class imageLoader extends EventDispatcher {		public var _loc:String="topleft";		public var _progBarMode:String="across";		private var _mc:Sprite;		public var url:String;		public var _imageUrl:String;		public var _scale:Number;		public var loader:Loader;		public var progressOutPut:TextField;		private var _progressBar:Sprite;		public var _iheight:Number;		public var _iwidth:Number;		public var _x:Number;		public var _y:Number;				public var _contentWidth:Number=0;		public var _contentHeight:Number=0;		private var _progressBarW:Number=0;		private var _progressBarH:Number=0;		/*		_scaleTo - "width" is option to make image fit to column width				*/		private var _scaleTo:String;		public function imageLoader(_mc:Sprite,iheight:Number,iwidth:Number,xx:Number,yy:Number,scaleTo:String,progBarMode:String) {			super()			_iheight=iheight;			_iwidth=iwidth;			_progBarMode=progBarMode;			//trace("imageLoader",_iheight,_iwidth)			_y=yy;			_x=xx;			this._mc = _mc;			this.url = url;			_scaleTo=scaleTo;			loader = new Loader();			loader.contentLoaderInfo.addEventListener(Event.COMPLETE, onComplete,false,0,true);			loader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, onIOError,false,0,true);			if (_progBarMode!="none"){				loader.contentLoaderInfo.addEventListener(ProgressEvent.PROGRESS, onProgress,false,0,true);								}				}		public function loadImage( url:String,imageUrl:String=null):void {			//SET SCALE INFO			_imageUrl=_imageUrl;			var request:URLRequest = new URLRequest(url);			loader.load(request);			/*if (!_mc.contains(progressOutPut)) {			_mc.addChild(progressOutPut);			}*/		}		public function unloadImage():void {			trace("imageLoader")			loader.unload();		}		private function onComplete(event:Event):void {							LoaderInfo(event.target).removeEventListener(Event.COMPLETE,onComplete,false);				LoaderInfo(event.target).removeEventListener(IOErrorEvent.IO_ERROR,onIOError,false);										//trace("Loaded",_loc,_iwidth,_iheight,loader.content.width,loader.content.height);			_mc.addChildAt(loader,0);			//trace(_mc);			_contentWidth=loader.content.width;			_contentHeight=loader.content.height;			if (_loc=="centre") {				loader.content.x=-_contentWidth/2;				loader.content.y=-_contentHeight/2;			}			var xscale:Number=  _iwidth/_contentWidth;			var yscale:Number=  _iheight/_contentHeight;			_scale=Math.min(xscale,yscale);			//trace("scale",_scale)			//IF FIXED TO WIDTH OR HEIGHT SCALE THEN OVERRIDE			//if (_scaleTo=="width"){				_scale=xscale;			//}else if (_scaleTo=="height"){				_scale=yscale;		//	}			Bitmap(loader.content).smoothing=true;				/*var xscale=  _iwidth/_contentWidth;				var yscale=  _iheight/_contentHeight;				_scale=Math.min(xscale,yscale);								//IF FIXED TO WIDTH SCALE				if (_scaleTo=="width"){					_scale=xscale;									}else if (_scaleTo=="height"){					_scale=yscale;									}*/				loader.scaleX=xscale				loader.scaleY=yscale;						//loader.content.scaleX=loader.content.scaleY=_scale			//loader.content.addEventListener(Event.REMOVED_FROM_STAGE,loader.content.removed);			//_mc.removeChild(progressOutPut);							dispatchEvent(new Event("onImageLoad"));		}		private function onProgress(e:ProgressEvent):void {			//dispatchEvent(new Event("onImageLoad"));			//progressOutPut.text="LOADING "+Math.floor(e.bytesLoaded/1024)+"/"+Math.floor(e.bytesTotal/1024);			var percent:Number=e.bytesLoaded/e.bytesTotal;			//trace(percent)					}		private function onIOError(event:IOErrorEvent):void {			trace("IO Error.",event);		}			public function unLoad():void {			_mc.removeChild(loader.content);		}		public function get _loader():Loader {			trace("IO Error.");			return loader;		}		public function set x(n:Number):void {			_x=n;		}		public function set y(n:Number):void {			_y=n;		}		public function set loc(n:String):void {			_loc=n;		}		public function set iwidth(n:Number):void {			_iwidth=n;		}		public function set iheight(n:Number):void {			_iheight=n;		}	}}/*create a a object of imageLoader class and add a event listener (for our custom event “onImageLoad”).var myImageLoader:imageLoader = new imageLoader(this, “images/someImg.jpg”);myImageLoader.addEventListener(”onImageLoad”, callbackHandler);function callbackHandler(event:Event) {trace(”Image Loading Complete!”);}*/