package com.spiral.maryrose.charactercase.views{import flash.display.Sprite;import flash.display.Sprite;import flash.net.URLRequest;import flash.display.Loader;import com.spiral.maryrose.charactercase.model.Config;import com.spiral.maryrose.charactercase.events.ObjectMenuEvent;import caurina.transitions.Tweener;import flash.events.Event;import flash.display.Bitmap;import flash.events.IOErrorEvent;import com.spiral.views.ImageLoader;import com.spiral.events.ImageLoaderEvent;import flash.utils.setTimeout;public class ObjectContainer extends Sprite{	private var imageLoaders:Array;	private var containerHeight:uint;	private var titleStrip:TitleStrip;	private var title:String;	private var about:String;	private var debug:Boolean=false;	private var currentImageIndex:int=-1;	private var lastLoader:ImageLoader	public function ObjectContainer(containerHeight:uint)	{		super();		this.containerHeight=containerHeight;		}		public function init(numImages:uint):void{		makeTitle()		imageLoaders = new Array();		for (var i:uint=0; i< numImages; i++){			var imageLoader:ImageLoader = new ImageLoader();			imageLoaders.push(imageLoader);			imageLoader.addEventListener(ImageLoaderEvent.LOADED,loadedHandler)			loadObject(i);		}				//imageLoader2.addEventListener(ImageLoaderEvent.LOADED,loadedHandler)		//imageLoaders=[imageLoader1,imageLoader2]	}		public function loadObject(index:uint):void{						var currentImageLoader:ImageLoader=imageLoaders[index];				var file=Config.objectList[index].files.@large;		title=Config.objectList[index].name.toString();		about=Config.objectList[index].about.toString();				currentImageLoader.loadImage(Config.imagesPath+file);		//currentImageLoader.visible=false;				currentImageLoader.x = 0;		currentImageLoader.y = 0;				}		public function showObject(index:uint):void{		//trace("showObject", index)		/*show new one*/		var newImageLoader:ImageLoader=imageLoaders[index];		addChild(newImageLoader)			currentImageIndex=index;		title=Config.objectList[index].name.toString();		setTitle(1000);	}		public function hideCurrentObject():void{		trace("hideCurrentObject", currentImageIndex)		if (currentImageIndex>-1 && currentImageIndex<imageLoaders.length ){						var currentImageLoader:ImageLoader=imageLoaders[currentImageIndex];				if (contains(currentImageLoader)) removeChild(currentImageLoader);					}				fadeTitle()	}		public function loadedHandler(e:Event):void{		//var currentImageLoader:ImageLoader=imageLoaders[currentImageIndex];		if (debug) trace("loaded");		/*currentImageLoader.alpha=0;				if (lastLoader!=null) {					lastLoader.alpha=0;					lastLoader.unLoadImage();				}				var tDelay:uint=0.0;				Tweener.addTween(currentImageLoader,{alpha:1,time:tDelay})				makeTitle(tDelay);	*/		}			public function fadeObject(imageLoader:ImageLoader=null):void{		if (imageLoader!=null){			Tweener.addTween(imageLoader,{alpha:0,time:0})		}		//, delay:0 /*, onComplete:unloadObject*/	}			public function fadeTitle():void	{		Tweener.addTween(titleStrip,{alpha:0,time:1});  /*, onComplete:clearTitle*/ 	}		public function clearTitle():void{		if(titleStrip != null && contains(titleStrip)){			removeChild(titleStrip);			titleStrip=null;		}	}		public function makeTitle():void{		titleStrip= new TitleStrip();		titleStrip.y=-titleStrip.height;		titleStrip.textfield.text="";		//		addChild(titleStrip);		//	}		public function setTitle(tdelay:uint):void{		titleStrip.alpha=1;		titleStrip.textfield.text=title;		//Tweener.addTween(titleStrip,{alpha:1,time:1000, delay:tdelay})	}	public function onMenuHilight(e:ObjectMenuEvent):void{		//trace("onMenuHilight")		//fadeObject();		//fadeTitle();		//loadObject(e.objectIndex)		hideCurrentObject()		setTimeout(showObject, 1000, e.objectIndex);	}}}