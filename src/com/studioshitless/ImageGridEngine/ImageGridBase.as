package com.studioshitless.ImageGridEngine{import flash.display.Sprite;import com.studioshitless.views.MaskedImage;import com.studioshitless.events.MaskedImageEvent;public class ImageGridBase extends Sprite implements IImageGrid{	public var w:uint;	public var h:uint;	public var counter;			public var imageList:Array;		public var shuffle:Boolean=true;	public var showGrid:Boolean=false;		public function ImageGridBase(w:uint, h:uint)	{		super();		this.w=w;		this.h=h;	}		public function init(imageList:Array, startSize:uint=0):void{		copyList(imageList);		}		public function addImage():void{	}		public function onImageZoomed(e:MaskedImageEvent):void{		var i:MaskedImage = e.target as MaskedImage;		setChildIndex(i,this.numChildren-1);	}		public function copyList(imageList:Array):void{		this.imageList=[];		if (shuffle){			var tempList:Array=[];			for (var i:uint=0; i < imageList.length; i++){				tempList.push(imageList[i])			}			var randomPos:int = 0;			while (tempList.length>0)			{				    randomPos = int(Math.random() * tempList.length);				this.imageList.push(tempList[randomPos])				tempList.splice(randomPos,1)			}					}else{			for (i=0; i < imageList.length; i++){				this.imageList.push(imageList[i])			}		}			}		public function hideOthers(image:MaskedImage):void{		for each (var mi:MaskedImage in imageList){			if (image!=mi){				mi.alpha=0;			}		}	}	 	public function showAll():void{		for each (var mi:MaskedImage in imageList){				mi.alpha=1;		}	}		public function clean():void{		for each (var i:MaskedImage in imageList){			i.removeEventListener(MaskedImageEvent.ZOOM,onImageZoomed,false);			i.reset();			if (contains(i)) removeChild(i)		}	}}}