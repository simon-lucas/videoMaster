package com.studioshitless.ImageGridEngine{import flash.display.Sprite;import com.studioshitless.ImageGridEngine.IImageGrid;import com.studioshitless.ImageGridEngine.ImageGridBase;import com.studioshitless.views.MaskedImage;import flash.utils.setTimeout;import com.studioshitless.events.MaskedImageEvent;import com.studioshitless.Utilities.DrawLineRectangle;import flash.geom.Point;import flash.utils.Dictionary;public class ImageLooseGrid extends ImageGridBase implements IImageGrid{	private var centreX:Number;	private var centreY:Number;	private var hSpace:Number;	private var vSpace:Number;	private var topRowNum:uint;	private var bottomRowNum:uint;	private var hImageSpace:uint;	private var vImageSpace:uint;	private var margin=0.2;//percentage of space aroundf image	private var maxImages:uint	private var imageCount:uint;	private var gridLineSprites:Array;	private var gridPoints:Array;	private var numberRows:uint;	private var imageGridObjects:Array;	private var imagePointDictionary:Dictionary	public function ImageLooseGrid(w:uint, h:uint)	{		super(w,h);		centreX=w/2;		centreY=h/2;	}		public override function init(imageList:Array, startSize:uint=0):void{		//trace(imageList)		super.init(imageList);				initRows();		initGrid()			counter=0;		addImage();	}		public override function addImage():void{		if (counter < maxImages){			var im:MaskedImage= imageList[counter];			im.scaleTo(hImageSpace,vImageSpace, true);			var p:Point=imagePointDictionary[im]			//trace(p)			im.x=p.x			im.y=p.y			addChild(im)			im.addEventListener(MaskedImageEvent.ZOOM,onImageZoomed,false)							counter++;			setTimeout(addImage,250)		}	}		private function addImageAtTop(im:MaskedImage):void{			var offset:Number=0;				im.scaleTo(hImageSpace,vImageSpace, true);		if (bottomRowNum>0){			im.x=(counter)*hSpace+offset + (hSpace/2);			im.y=vSpace/2;					}else{			im.x=(counter)*hSpace+offset + (hSpace/2);			im.y=vSpace/2;					}		;	}		private function addImageAtBottom(im:MaskedImage):void{		var offset:Number=0;		if (bottomRowNum > 2 && bottomRowNum%2 == 1){			offset=0.5;		}		//trace("bottom", counter-topRowNum)		im.scaleTo(hImageSpace,vImageSpace, true);		im.x=(counter-topRowNum+offset)*hSpace + (hSpace/2);		im.y=vSpace*1 + (vSpace/2);;		addChild(im)		im.addEventListener(MaskedImageEvent.ZOOM,onImageZoomed,false);		//trace("addImageAtTop",im.x,im.scaleX)	}		public function initGrid():void{				var offset:Number=0;		var r:DrawLineRectangle;		var p:Point;		imagePointDictionary=new Dictionary()		gridPoints=[];		gridLineSprites=[];				hSpace = w/imageGridObjects[0].length; //width of top line		vSpace= h/imageGridObjects.length; //number of lines		hImageSpace=hSpace-hSpace*margin;		vImageSpace =vSpace-vSpace*margin;		var countX:uint=0;		//trace("showGrid",showGrid, hSpace, vSpace);		for (var i:uint=0; i < imageGridObjects.length; i++){			//trace("imageGridObjects[i].length", imageGridObjects[i].length)					for (var j:uint=0; j < imageGridObjects[i].length; j++){				//trace("mod",imageGridObjects[i].length, imageGridObjects[i].length%2)				if (i > 0 && imageGridObjects[i].length < imageGridObjects[i-1].length ) offset=hSpace/2;				p = new Point();				r = new DrawLineRectangle(0,0,hSpace,vSpace,0xFFFFFF, 0x336699);				p.x=j * hSpace + hSpace/2 + offset;				p.y=i * vSpace + vSpace/2;							r.x=j * hSpace + offset;				r.y=i * vSpace;				imagePointDictionary[imageGridObjects[i][j].image]=p; //add the point loc to the image				imageGridObjects[i][j].point=p;				imageGridObjects[i][j].gridRect=r;				if (showGrid) {					//trace("ppp",p.x, p.y)					addChild(r)					}									countX++			}						}	}		public function initRows():void{		var i:uint;		imageGridObjects=[];				maxImages = imageList.length;//uint(Math.random()*imageList.length)		//numberRows=uint(maxImages/5)+1;		//trace("maxImages",maxImages)		if (maxImages > 3){			numberRows=2;			} else if (maxImages <= 3){			numberRows=1;		} else if (maxImages > 10 && maxImages < 16) {			//numberRows=3;		}		var row1:Array=new Array()		var row2:Array=new Array()		var row3:Array=new Array()		var obj:Object;		for (i=0; i < maxImages; i++){			obj= new Object()			obj.image=imageList[i];			if (numberRows==2){									if (i < Math.ceil(maxImages/2)){					row1.push(obj);				}else{					row2.push(obj);				}							}			if (numberRows==1){				row1.push(obj);			}		}		if (numberRows==2){			imageGridObjects=[row1,row2]					} else if (numberRows==1){			imageGridObjects=[row1]		}		//trace("numberRows", imageGridObjects)	}		}}