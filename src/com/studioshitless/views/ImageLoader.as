package com.studioshitless.views{import flash.display.Sprite;import flash.display.Loader;import flash.events.Event;import flash.events.IOErrorEvent;import flash.display.Bitmap;import com.studioshitless.events.ImageLoaderEvent;import flash.net.URLRequest;public class ImageLoader extends Loader{	private var debug:Boolean=false	;	private var _ratio:Number;	public function ImageLoader()	{		super();		init()	}	public function init():void{		contentLoaderInfo.addEventListener(Event.COMPLETE, completeHandler);	    contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);	}	public function loadImage(filePath:String):void	{			if (debug) trace("ImageLoader loadImage",filePath);		var image:URLRequest = new URLRequest(filePath);		load(image);		}	public function completeHandler(e:Event):void{		if (debug) trace("ImageLoader completeHandler");		var bitmaps=Bitmap(this.content)		bitmaps.smoothing=true;		setRatio()		dispatchEvent( new ImageLoaderEvent(ImageLoaderEvent.LOADED))	}			public function ioErrorHandler(e:IOErrorEvent):void{		if (debug) trace("ioErrorHandler", e);	}		public function dispose(e:Event=null):void{		if (debug) trace("ImageLoader::dispose");		contentLoaderInfo.removeEventListener(Event.COMPLETE, completeHandler);	    contentLoaderInfo.removeEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);		var bitmaps=Bitmap(this.content)		//if (bitmaps && bitmaps.bitmapData.width!=0) bitmaps.bitmapData.dispose();						try {			bitmaps.bitmapData.dispose()		    //if (debug) trace(myBitmapData.getPixel(1, 1));		} catch (error:Error) {		    if (debug) trace(error); // ArgumentError		}		this.unload();	}		public function get ratio():Number	{		return _ratio;	}	public function setRatio():void	{		_ratio=width/height;	};		}}