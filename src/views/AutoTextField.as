package views {		import fl.text.TLFTextField;	import data.Global;	import flash.text.Font;	import flash.display.MovieClip;	import flash.events.Event;	import flashx.textLayout.formats.TextLayoutFormat;	import flash.text.TextFormat;	import flash.text.TextFieldAutoSize;	import flashx.textLayout.formats.*;	import flashx.textLayout.formats.TextLayoutFormat;	import flashx.textLayout.elements.TextFlow;		import flash.text.TextFormatAlign;	import flash.text.AntiAliasType;	import flash.text.engine.RenderingMode;	import flash.text.engine.FontLookup;			public class AutoTextField extends MovieClip{		public var size:int;		public var fontstyle:String;		public var textwidth:Number=300;		//public var textfield;		public var bold:Font;		public var regular:Font;		public var light:Font;								public var talign:String="normal";		public var tdirection:Object		public var tAlign:Object		//HelveticaNeueLTStd-Bd.otf		//HelveticaNeueLTStd-Lt.otf		//HelveticaNeueLTStd-Roman.otf		[Embed(source="../../assets/fonts/HelveticaNeueLTArabic-Light.ttf", fontName="HelveticaNeueLTArabicL", embedAsCFF="true")]		private var hlight:Class;		[Embed(source="../../assets/fonts/HelveticaNeueLTArabic-Bold.ttf", fontName="HelveticaNeueLTArabicB", embedAsCFF="true")]		private var hbold:Class;		[Embed(source="../../assets/fonts/HelveticaNeueLTArabic-Roman.ttf", fontName="HelveticaNeueLTArabicR", embedAsCFF="true")]		private var hregular:Class;								public function AutoTextField() {						mouseEnabled = false			mouseChildren = false			// constructor code			tAlign={A:TextFormatAlign.RIGHT, E:TextFormatAlign.LEFT}			tdirection={A:"rtl", E:"ltr"}			trace("go")			//textfield.rotation=5			bold = new hbold();			regular = new hregular();			light = new hlight();									//trace("regFont", regFont.fontName)					//Font.registerFont(hregular);			//setText(Global["screenText"+Global.lang][nameString])			addEventListener(Event.ADDED_TO_STAGE, init)		}				public function initProps(size:int, fontStyle:String, textwidth:Number):void{						this.size=size			this.fontstyle=fontStyle						this.textwidth=textwidth					}				public function init(e:Event=null):void{			trace("init", this.name)			var fonts:Array = Font.enumerateFonts(false);	        for(var i:int = 0; i < fonts.length; i++) {	            //trace(fonts[i].fontName);	        }																																    //myFormat.font = this[fontstyle].fontName //boldFont.fontName;		    //myFormat.size = size;						textfield.antiAliasType = AntiAliasType.ADVANCED;				textfield.embedFonts=true			textfield.wordWrap = true;			//textfield.border = true;			//textfield.setTextFormat(myFormat)					textfield.width= textwidth			trace("PPP", textfield.width,textwidth)											    		    						var tFormat:TextLayoutFormat = new TextLayoutFormat();			tFormat.renderingMode = RenderingMode.NORMAL			tFormat.fontFamily = this[fontstyle].fontName;			tFormat.color	= 0x000000;			tFormat.fontLookup = FontLookup.EMBEDDED_CFF;			tFormat.fontSize	= size;			tFormat.textAlign = tAlign[Global.lang]			if (talign=="center"){				tFormat.textAlign=TextFormatAlign.CENTER			}						//tFormat.font = this[fontstyle].fontName				//var myFormat:TextFormat = new TextFormat();						textfield.textFlow.invalidateAllFormats();			textfield.textFlow.hostFormat = tFormat;			if (this.name.charAt(this.name.length-2)=="_"){				if (this.name.charAt(this.name.length-1)=="E"){					//tFormat.textAlign = TextFormatAlign.LEFT;					//textfield.autoSize = TextFieldAutoSize.LEFT;					textfield.direction = tdirection["E"]														textfield.text= Global["screenTextE"][this.name.split("_")[0]]				}else{					//tFormat.textAlign = TextFormatAlign.RIGHT;										//textfield.autoSize = TextFieldAutoSize.RIGHT;					textfield.direction = tdirection["A"]					textfield.text= Global["screenTextA"][this.name.split("_")[0]]				}			}else{				textfield.direction = tdirection[Global.lang]				textfield.text= Global["screenText"+Global.lang][this.name]			}			trace("PPP", textfield.width,textwidth)		}				public function set tName (nameString:String):void{			name=nameString;			//appendText(Global["screenText"+Global.lang][nameString]);		}	}	}